---
- name: Do base configuration
  include_role:
    name: "ten7.flightdeck_base"
- name: Install needed software
  apk:
    name: "{{ _packages | join(', ') }}"
    state: present
    update_cache: yes
  vars:
    _packages:
      - "apache2"
      - "libcap"
      - "zlib"
      - "apache2-proxy"
      - "php7-apache2"
      - "php7"
      - "git"
      - "patch"
      - "curl"
      - "imagemagick"
      - "php7-bcmath"
      - "php7-ctype"
      - "php7-curl"
      - "php7-dom"
      - "php7-fileinfo"
      - "php7-gd"
      - "php7-iconv"
      - "php7-intl"
      - "php7-json"
      - "php7-ldap"
      - "php7-mbstring"
      - "php7-mcrypt"
      - "php7-memcached"
      - "php7-mysqli"
      - "php7-mysqlnd"
      - "php7-opcache"
      - "php7-openssl"
      - "php7-phar"
      - "php7-sqlite3"
      - "php7-odbc"
      - "php7-pecl-apcu"
      - "php7-pecl-memcache"
      - "php7-pecl-redis"
      - "php7-pdo_odbc"
      - "php7-pdo"
      - "php7-pdo_mysql"
      - "php7-pdo_sqlite"
      - "php7-phar"
      - "php7-soap"
      - "php7-session"
      - "php7-simplexml"
      - "php7-sodium"
      - "php7-tokenizer"
      - "php7-xdebug"
      - "php7-exif"
      - "php7-xml"
      - "php7-xmlreader"
      - "php7-xmlwriter"
      - "php7-zip"
      - "php7-zlib"
      - "py3-passlib"
      - "py3-mysqlclient"
      - "py3-jmespath"
      - "mariadb-client"
      - "rsync"
      - "openssh-client"
      - "unixodbc-dev"
      - "freetds-dev"
      - "nodejs"
      - "npm"
      - "libsass"
  notify:
    - clear caches
- name: Ensure key directories are owned by apache
  file:
    path: "{{ item }}"
    state: directory
    owner: "apache"
    group: "apache"
    mode: "u=rwx,g=rwx,o=r"
    recurse: yes
  loop:
    - "/etc/apache2"
    - "/etc/ssl/apache2"
    - "/etc/apache2/sites.d"
    - "/etc/php7"
    - "/run/apache2"
    - "/var/log/apache2"
    - "/var/www"
    - "/var/www/.drush"
    - "/var/www/.drush/sites"
    - "/var/www/.npm-global"
    - "/srv/html"
- name: Link logs files to stdout for the Docker log collector
  file:
    src: "{{ item }}"
    dest: "/dev/stdout"
    state: link
    force: yes
    follow: no
  loop:
    - "/var/log/apache2/access.log"
    - "/var/log/apache2/000_default-access_log"
    - "/var/log/apache2/000_default_ssl-access_log"
- name: Link logs files to stderr for the Docker log collector
  file:
    src: "{{ item }}"
    dest: "/dev/stderr"
    state: link
    force: yes
    follow: no
  loop:
    - "/var/log/apache2/error.log"
    - "/var/log/apache2/000_default-error_log"
    - "/var/log/apache2/000_default_ssl-error_log"
- name: Make drush directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "apache"
    group: "apache"
    mode: "u=rwx,g=rwx,o=r"
  loop:
    - "/etc/drush8"
    - "/etc/drush10"
    - "/etc/wpcli"
    - "/var/www/.composer/vendor/bin"
- name: Download composer
  get_url:
    url: "https://getcomposer.org/installer"
    dest: "/tmp/composer-setup.php"
    mode: "u=rwx,g=rwx,o="
- name: Run composer setup
  shell: >
    /usr/bin/php /tmp/composer-setup.php --quiet
  args:
    chdir: "/tmp"
    creates: "/tmp/composer.phar"
- name: Install composer
  copy:
    src: "/tmp/composer.phar"
    dest: "/usr/bin/composer"
    owner: "apache"
    group: "apache"
    mode: "u=rx,g=rx,o=rx"

- name: Install Drush 10.x
  shell: >
    composer require drush/drush:{{ flightdeck_drush_version | default('^10.6.2') }} &&
    /etc/drush10/vendor/bin/drush core:init -y
  args:
    chdir: "/etc/drush10"
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Install Drush 8.x
  shell: >
    composer require drush/drush:{{ flightdeck_drush_version | default('^8.0.0') }} &&
    /etc/drush8/vendor/bin/drush core:init -y
  args:
    chdir: "/etc/drush8"
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Install Wordpress CLI
  get_url:
    url: "https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar"
    dest: "/etc/wpcli/wp"
    owner: "apache"
    group: "apache"
    mode: "u=rx,g=rx,o=rx"
- name: Add global drush and wp symlinks
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: yes
    follow: no
  loop:
    - src: "/etc/drush10/vendor/bin/drush"
      dest: "/usr/local/bin/drush10"
    - src:  "/etc/drush10/vendor/bin/drush"
      dest: "/var/www/.composer/vendor/bin/drush"
    - src: "/etc/drush8/vendor/bin/drush"
      dest: "/usr/local/bin/drush8"
    - src: "/etc/wpcli/wp"
      dest: "/usr/local/bin/wp"
- name: Set node global packages to install as user-local
  shell: >
    npm config set prefix '/var/www/.npm-global'
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Install theme utilities
  shell: >
    npm install -g sass gulp
  become: yes
  become_user: "apache"
  become_method: "su"
- name: Install Terminus
  get_url:
    url: "https://github.com/pantheon-systems/terminus/releases/download/3.0.7/terminus.phar"
    dest: "/usr/local/bin/terminus"
    owner: "apache"
    group: "apache"
    mode: "u=rx,g=rx,o="
- name: Create temp file for the Platform CLI installer
  tempfile:
    state: file
    prefix: installer
    suffix: .sh
  register: _platform_tempfile
- name: Download Platform CLI installer
  get_url:
    url: "https://raw.githubusercontent.com/platformsh/cli/main/installer.sh"
    checksum: "sha512:c24aeed710834f74132dbb5e122bddac8f5a56c83ee8925063b1025f3d935501025547b7a118c3146a37f88cf7f1d4e3e273667000f67b471c7257e2d88cbbec"
    dest: "{{ _platform_tempfile.path }}"
    owner: "root"
    group: "root"
    mode: "u=rx,g=rx,o="
- name: Install the Platform CLI
  shell: >
    {{ _platform_tempfile.path }}
- name: Install the Acquia CLI
  get_url:
    url: "https://github.com/acquia/cli/releases/download/1.30.1/acli.phar"
    checksum: "sha512:90abdcc2c041f4d6c56740ad3d0cdafd212cb1e7ccd80d1720f6bf4245a65153b06846e03c7571b77b413f2a9ec9de17459ca62bef18288e7215c04b4d303e25"
    dest: "/usr/local/bin/acli"
    owner: "apache"
    group: "apache"
    mode: "u=rx,g=rx,o="
- name: Configure ODBC
  template:
    src: "templates/odbcinst.ini"
    dest: "/etc/odbcinst.ini"
    owner: "root"
    group: "root"
    mode: "u=rw,g=r,o=r"
- name: Template default index.html
  template:
    src: "templates/index.html"
    dest: "/srv/html/index.html"
    owner: "apache"
    group: "apache"
    mode: "u=rw,g=r,o=r"
